- id: '1675712583101'
  alias: Level Display Button Toggle
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.level_display_button
    to: 'on'
  condition: []
  action:
  - service: input_boolean.toggle
    data: {}
    target:
      entity_id: input_boolean.level_display_switch
  mode: single
- id: '1675963006760'
  alias: Level Display Switch Off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.level_display_switch
    to: 'off'
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      device_id: 4fe16d05ffeaa62033641715a8a8df30
  mode: single
- id: '1675963415480'
  alias: Level Display Pitch
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.level_sensor_pitch_trimmed
  - platform: state
    entity_id:
    - input_boolean.level_display_switch
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: state
    entity_id: input_boolean.level_display_switch
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_pitch_trimmed
        above: 2
      sequence:
      - service: light.turn_on
        data:
          color_name: red
        target:
          entity_id: light.level_display_part_1
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_2
          - light.level_display_part_3
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_pitch_trimmed
        above: 0.5
        below: 2
      sequence:
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_1
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_2
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.level_display_part_3
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_pitch_trimmed
        above: -0.5
        below: 0.5
      sequence:
      - service: light.turn_on
        data:
          color_name: green
        target:
          entity_id: light.level_display_part_2
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_1
          - light.level_display_part_3
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_pitch_trimmed
        above: -2
        below: -0.5
      sequence:
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_3
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_2
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.level_display_part_1
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_pitch_trimmed
        below: -2
      sequence:
      - service: light.turn_on
        data:
          color_name: red
        target:
          entity_id: light.level_display_part_3
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_1
          - light.level_display_part_2
  mode: single
- id: '1675963902468'
  alias: Level Display Roll
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.level_sensor_roll_trimmed
  - platform: state
    entity_id:
    - input_boolean.level_display_switch
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: state
    entity_id: input_boolean.level_display_switch
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_roll_trimmed
        above: 2
      sequence:
      - service: light.turn_on
        data:
          color_name: red
        target:
          entity_id: light.level_display_part_4
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_5
          - light.level_display_part_6
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_roll_trimmed
        above: 0.5
        below: 2
      sequence:
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id:
          - light.level_display_part_4
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_5
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_6
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_roll_trimmed
        above: -0.5
        below: 0.5
      sequence:
      - service: light.turn_on
        data:
          color_name: green
        target:
          entity_id: light.level_display_part_5
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_4
          - light.level_display_part_6
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_roll_trimmed
        below: -0.5
        above: -2
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.level_display_part_4
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_5
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_6
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_roll_trimmed
        below: -2
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_4
          - light.level_display_part_5
      - service: light.turn_on
        data:
          color_name: red
        target:
          entity_id: light.level_display_part_6
  mode: single
- id: '1693610638071'
  alias: Converter Energy Meter Force Update If Unavailable
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.converter_energy_meter'') == ''unavailable''
      }}'
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition: []
  action:
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id:
      - sensor.converter_energy
      - sensor.converter_energy_meter
  mode: single
- id: '1698963382724'
  alias: Set Home Location by GPS
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition: []
  action:
  - service: homeassistant.set_location
    data_template:
      latitude: "{% if states('sensor.gps_latitude') is not none -%}\n  {{ states('sensor.gps_latitude')
        }}\n{%- endif %}"
      longitude: "{% if states('sensor.gps_longitude') is not none -%}\n  {{ states('sensor.gps_longitude')
        }}\n{%- endif %}"
      elevation: "{% if states('sensor.gps_altitude') is not none -%}\n  {{ states('sensor.gps_altitude')
        | int(default=0) }}\n{%- endif %}"
  mode: single
- id: '1699887231044'
  alias: Notify HA Started
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: notify.notify
    data:
      title: HA Has Started
      message: HA has started
  mode: single
- id: '1700673885536'
  alias: Restart GPS Addon if Not Running
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /15
  condition:
  - condition: template
    value_template: '{{ state_attr(''device_tracker.gps_location'', ''latitude'')
      is none }}'
  action:
  - service: hassio.addon_restart
    data:
      addon: 2d5c2698_gpsd2mqtt
  mode: single
- id: '1729611940368'
  alias: Solar Controller MT50 Disable Night
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.solar_array_input_voltage
    for:
      hours: 0
      minutes: 5
      seconds: 0
    below: 7
  - trigger: state
    entity_id:
    - sensor.solar_array_input_voltage
    to: unavailable
    for:
      hours: 0
      minutes: 5
      seconds: 0
  conditions: []
  actions:
  - action: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.solar_mt50_disable
  mode: single
- id: '1729612096924'
  alias: Solar Controller MT50 Enable Day
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.solar_array_input_voltage
    for:
      hours: 0
      minutes: 5
      seconds: 0
    above: 7
  conditions: []
  actions:
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.solar_mt50_disable
  mode: single
- id: '1729623903274'
  alias: Set Timezone By GPS Location
  description: ''
  triggers:
  - trigger: zone
    entity_id: device_tracker.gps_location
    zone: zone.home
    event: enter
  conditions: []
  actions:
  - action: arvee.set_geo_timezone
    data_template:
      latitude: '{{ states(''sensor.gps_latitude'') | float }}'
      longitude: '{{ states(''sensor.gps_longitude'') | float }}'
  mode: single
- id: '1733164474988'
  alias: Winterized
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.water_pump_signal
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  conditions: []
  actions:
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.water_pump_toggle
  mode: single
- id: '1734699894612'
  alias: Toggle Bluetooth if RSSI Unavailable 048
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.gj_12v100ah_0526_048_rssi
    to: unavailable
    for:
      hours: 0
      minutes: 5
      seconds: 0
  conditions: []
  actions:
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.gj_12v100ah_0526_048_enable_bluetooth_connection
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - action: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.gj_12v100ah_0526_048_enable_bluetooth_connection
  mode: single
- id: '1734700073063'
  alias: Toggle Bluetooth if RSSI Unavailable 161
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.gj_12v100ah_0526_161_rssi
    to: unavailable
    for:
      hours: 0
      minutes: 5
      seconds: 0
  conditions: []
  actions:
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.gj_12v100ah_0526_161_enable_bluetooth_connection
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - action: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.gj_12v100ah_0526_161_enable_bluetooth_connection
  mode: single
- id: '1744645912070'
  alias: Level Sensor Roll Trimmed MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.level_sensor_roll_trimmed
  conditions: []
  actions:
  - action: mqtt.publish
    metadata: {}
    data:
      evaluate_payload: true
      qos: '0'
      retain: true
      topic: dm18mpu/sensor/roll/trimmed
      payload: '{{ states("sensor.level_sensor_roll_trimmed") }}'
  mode: single
- id: '1744647455259'
  alias: Level Sensor Pitch Trimmed MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.level_sensor_pitch_trimmed
  conditions: []
  actions:
  - action: mqtt.publish
    metadata: {}
    data:
      evaluate_payload: true
      qos: '0'
      retain: true
      topic: dm18mpu/sensor/pitch/trimmed
      payload: '{{ states("sensor.level_sensor_pitch_trimmed") }}'
  mode: single
- id: '1744757283442'
  alias: Level Sensor Right Front Drop MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.right_front_drop
  conditions: []
  actions:
  - action: mqtt.publish
    metadata: {}
    data:
      evaluate_payload: true
      qos: '0'
      retain: true
      topic: dm18mpu/sensor/drop/front/right
      payload: '{{ states("sensor.right_front_drop") }}'
  mode: single
- id: '1744757355531'
  alias: Level Sensor Left Front Drop MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.left_front_drop
  conditions: []
  actions:
  - action: mqtt.publish
    metadata: {}
    data:
      evaluate_payload: true
      qos: '0'
      retain: true
      topic: dm18mpu/sensor/drop/front/left
      payload: '{{ states("sensor.left_front_drop") }}'
  mode: single
- id: '1744757409784'
  alias: Level Sensor Left Rear Drop MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.left_rear_drop
  conditions: []
  actions:
  - action: mqtt.publish
    metadata: {}
    data:
      evaluate_payload: true
      qos: '0'
      retain: true
      topic: dm18mpu/sensor/drop/rear/left
      payload: '{{ states("sensor.left_rear_drop") }}'
  mode: single
- id: '1744757465608'
  alias: Level Sensor Right Rear Drop MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.right_rear_drop
  conditions: []
  actions:
  - action: mqtt.publish
    metadata: {}
    data:
      evaluate_payload: true
      qos: '0'
      retain: true
      topic: dm18mpu/sensor/drop/rear/right
      payload: '{{ states("sensor.right_rear_drop") }}'
  mode: single
- id: '1745291570389'
  alias: WiCAN Engine Coolant Temp MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.wican_05_enginecoolanttemp
  conditions: []
  actions:
  - action: mqtt.publish
    data:
      evaluate_payload: false
      qos: '0'
      retain: true
      topic: wican/dc06753cc7d1/can/05_enginecoolanttemp
      payload: '{{ states("sensor.wican_05_enginecoolanttemp") }}'
  mode: single
- id: '1745294444319'
  alias: WiCAN Control Module Volt MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.wican_42_controlmodulevolt
  conditions: []
  actions:
  - action: mqtt.publish
    data:
      evaluate_payload: false
      qos: '0'
      retain: true
      topic: wican/dc06753cc7d1/can/42_controlmodulevolt
      payload: '{{ states("sensor.wican_42_controlmodulevolt") }}'
  mode: single
- id: '1745295183916'
  alias: WiCAN Intake Air Temperature MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.wican_0f_intakeairtemperature
  conditions: []
  actions:
  - action: mqtt.publish
    data:
      evaluate_payload: false
      qos: '0'
      retain: true
      topic: wican/dc06753cc7d1/can/0f_intakeairtemperature
      payload: '{{ states("sensor.wican_0f_intakeairtemperature") }}'
  mode: single
- id: '1745337203039'
  alias: WiCAN Ambient Air Temp MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.wican_46_ambientairtemp
  conditions: []
  actions:
  - action: mqtt.publish
    data:
      evaluate_payload: false
      qos: '0'
      retain: true
      topic: wican/dc06753cc7d1/can/46_ambientairtemp
      payload: '{{ states("sensor.wican_46_ambientairtemp") }}'
  mode: single
- id: '1745337912240'
  alias: WiCAN Calc Engine Load MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.wican_04_calcengineload
  conditions: []
  actions:
  - action: mqtt.publish
    data:
      evaluate_payload: false
      qos: '0'
      retain: true
      topic: wican/dc06753cc7d1/can/04_calcengineload
      payload: '{{ states("sensor.wican_04_calcengineload") }}'
  mode: single
- id: '1745338007205'
  alias: WiCAN Throttle Position MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.wican_11_throttleposition
  conditions: []
  actions:
  - action: mqtt.publish
    data:
      evaluate_payload: false
      qos: '0'
      retain: true
      topic: wican/dc06753cc7d1/can/11_throttleposition
      payload: '{{ states("sensor.wican_11_throttleposition") }}'
  mode: single
- id: '1745875797819'
  alias: WiCAN Trans Temperature MQTT
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.wican_b010_transtemperature
  conditions: []
  actions:
  - action: mqtt.publish
    data:
      evaluate_payload: false
      qos: '0'
      retain: true
      topic: wican/dc06753cc7d1/can/b010_transtemperature
      payload: '{{ states("sensor.wican_b010_transtemperature") }}'
  mode: single
- id: '1745877849302'
  alias: Dash Display Dim
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.dash_display_board_ldr
  conditions: []
  actions:
  - action: light.turn_on
    metadata: {}
    data_template:
      brightness_pct: '{{ (1-(states("sensor.dash_display_board_ldr")|float()-0.08))*60.0+40.0
        }}

        '
    target:
      entity_id: light.dash_display_backlight
  mode: single
