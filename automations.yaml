- id: '1675712583101'
  alias: Level Display Button Toggle
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.level_display_button
    to: 'on'
  condition: []
  action:
  - service: input_boolean.toggle
    data: {}
    target:
      entity_id: input_boolean.level_display_switch
  mode: single
- id: '1675963006760'
  alias: Level Display Switch Off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.level_display_switch
    to: 'off'
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      device_id: 4fe16d05ffeaa62033641715a8a8df30
  mode: single
- id: '1675963415480'
  alias: Level Display Pitch
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.level_sensor_pitch_trimmed
  - platform: state
    entity_id:
    - input_boolean.level_display_switch
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: state
    entity_id: input_boolean.level_display_switch
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_pitch_trimmed
        above: 2
      sequence:
      - service: light.turn_on
        data:
          color_name: red
        target:
          entity_id: light.level_display_part_1
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_2
          - light.level_display_part_3
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_pitch_trimmed
        above: 0.5
        below: 2
      sequence:
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_1
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_2
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.level_display_part_3
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_pitch_trimmed
        above: -0.5
        below: 0.5
      sequence:
      - service: light.turn_on
        data:
          color_name: green
        target:
          entity_id: light.level_display_part_2
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_1
          - light.level_display_part_3
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_pitch_trimmed
        above: -2
        below: -0.5
      sequence:
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_3
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_2
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.level_display_part_1
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_pitch_trimmed
        below: -2
      sequence:
      - service: light.turn_on
        data:
          color_name: red
        target:
          entity_id: light.level_display_part_3
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_1
          - light.level_display_part_2
  mode: single
- id: '1675963902468'
  alias: Level Display Roll
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.level_sensor_roll_trimmed
  - platform: state
    entity_id:
    - input_boolean.level_display_switch
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: state
    entity_id: input_boolean.level_display_switch
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_roll_trimmed
        above: 2
      sequence:
      - service: light.turn_on
        data:
          color_name: red
        target:
          entity_id: light.level_display_part_4
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_5
          - light.level_display_part_6
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_roll_trimmed
        above: 0.5
        below: 2
      sequence:
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id:
          - light.level_display_part_4
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_5
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_6
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_roll_trimmed
        above: -0.5
        below: 0.5
      sequence:
      - service: light.turn_on
        data:
          color_name: green
        target:
          entity_id: light.level_display_part_5
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_4
          - light.level_display_part_6
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_roll_trimmed
        below: -0.5
        above: -2
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.level_display_part_4
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_5
      - service: light.turn_on
        data:
          color_name: yellow
          brightness_pct: 50
        target:
          entity_id: light.level_display_part_6
    - conditions:
      - condition: numeric_state
        entity_id: sensor.level_sensor_roll_trimmed
        below: -2
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.level_display_part_4
          - light.level_display_part_5
      - service: light.turn_on
        data:
          color_name: red
        target:
          entity_id: light.level_display_part_6
  mode: single
- id: '1693610638071'
  alias: Converter Energy Meter Force Update If Unavailable
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.converter_energy_meter'') == ''unavailable''
      }}'
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition: []
  action:
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id:
      - sensor.converter_energy
      - sensor.converter_energy_meter
  mode: single
- id: '1698963382724'
  alias: Set Home Location by GPS
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition: []
  action:
  - service: homeassistant.set_location
    data_template:
      latitude: "{% if states('sensor.gps_latitude') is not none -%}\n  {{ states('sensor.gps_latitude')
        }}\n{%- endif %}"
      longitude: "{% if states('sensor.gps_longitude') is not none -%}\n  {{ states('sensor.gps_longitude')
        }}\n{%- endif %}"
      elevation: "{% if states('sensor.gps_altitude') is not none -%}\n  {{ states('sensor.gps_altitude')
        | int(default=0) }}\n{%- endif %}"
  mode: single
- id: '1699887231044'
  alias: Notify HA Started
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: notify.notify
    data:
      title: HA Has Started
      message: HA has started
  mode: single
- id: '1700673885536'
  alias: Restart GPS Addon if Not Running
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /15
  condition:
  - condition: template
    value_template: '{{ state_attr(''device_tracker.gps_location'', ''latitude'')
      is none }}'
  action:
  - service: hassio.addon_restart
    data:
      addon: 2d5c2698_gpsd2mqtt
  mode: single
